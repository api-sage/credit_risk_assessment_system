// <auto-generated />
using System;
using CreditRiskAssessment.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditRiskAssessment.Migrations
{
    [DbContext(typeof(CRASDbContext))]
    [Migration("20240301221601_CRAS_Migration_001")]
    partial class CRAS_Migration_001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditRiskAssessment.Entities.AssessedCustomer", b =>
                {
                    b.Property<int>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SN"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<double>("AmountInvestedMonthly")
                        .HasColumnType("float");

                    b.Property<double>("AnnualIncome")
                        .HasColumnType("float");

                    b.Property<DateTime>("AssessedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("BVN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreditRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DebtToIncomeRatio")
                        .HasColumnType("real");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyBalance")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyInstallmentAmount")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyNetSalary")
                        .HasColumnType("float");

                    b.Property<int>("MonthsOfCreditHistory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDelayedPayment")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLoan")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OutstandingDebt")
                        .HasColumnType("float");

                    b.Property<bool>("PaymentOfMinimumAmount")
                        .HasColumnType("bit");

                    b.Property<int>("PredictedCreditScore")
                        .HasColumnType("int");

                    b.HasKey("SN");

                    b.ToTable("AssessedCustomers");
                });

            modelBuilder.Entity("CreditRiskAssessment.Entities.Customer", b =>
                {
                    b.Property<string>("BVN")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<double>("AmountInvestedMonthly")
                        .HasColumnType("float");

                    b.Property<double>("AnnualIncome")
                        .HasColumnType("float");

                    b.Property<int>("InterestRate")
                        .HasColumnType("int");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyBalance")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyInstallmentAmount")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyNetSalary")
                        .HasColumnType("float");

                    b.Property<int>("MonthsOfCreditHistory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDelayedPayment")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLoan")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OutstandingDebt")
                        .HasColumnType("float");

                    b.Property<bool>("PaymentOfMinimumAmount")
                        .HasColumnType("bit");

                    b.HasKey("BVN");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
